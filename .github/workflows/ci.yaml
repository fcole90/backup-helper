on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

permissions:
  contents: read # access to check out code and install dependencies

jobs:
  build_test_lint_typecheck:
    strategy:
      matrix:
        os:
        - windows-latest
        # - macos-latest
        # - ubuntu-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4

    - name: Install poetry
      run: pipx install poetry
    
    - uses: actions/setup-python@v5
      id: 'setup_python_step'
      with:
        python-version: '3.12'
        cache: 'poetry'
    - name: Fix pipx setup on Windows
      if: runner.os == 'Windows'
      # Based on https://pipx.pypa.io/stable/installation/#windows
      run: |
        $NEW_LOCATION = Join-Path "$HOME" 'pipx'
        $cache_dir = pipx environment --value PIPX_VENV_CACHEDIR
        $logs_dir = pipx environment --value PIPX_LOG_DIR
        $trash_dir = pipx environment --value PIPX_TRASH_DIR
        $home_dir = pipx environment --value PIPX_HOME

        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$cache_dir", "$logs_dir", "$trash_dir"

        # Remove the destination directory to ensure rename behavior of `Move-Item`
        Remove-Item -Recurse -Force -ErrorAction SilentlyContinue "$NEW_LOCATION"

        Move-Item -Path $home_dir -Destination "$NEW_LOCATION"
       
    - run: pipx reinstall-all --python '${{ steps.setup_python_step.outputs.python-path }}'
    - run: pipx --version
    - run: pipx ensurepath
    - run: pipx --version
    # - run: pipx reinstall poetry --python '${{ steps.setup_python_step.outputs.python-path }}'

    # - name: Workaround for Windows CI for https://github.com/python-poetry/poetry/issues/10028
    #   run: pipx inject poetry poethepoet[poetry_plugin]
    #   if: runner.os == 'Windows'
    
    - run: poetry install
    - run: poetry poe test
    - run: poetry poe lint
    - run: poetry poe typecheck
